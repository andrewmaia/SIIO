using System;
using Atomo.Data;
using System.Data;
using System.Linq;
using System.Text;
using System.Data.SqlClient;
using System.Collections.Generic;


namespace SIIO.DA
{
    public class BaseDA
    {

        public BaseDA()
        {
            rb.Conn = "Password=87707576;Persist Security Info=True;User ID=siio2;Initial Catalog=siio2;Data Source=dbsq0004.whservidor.com;";
            this.Conexao();
        }

        #region Load e Variaveis

        protected  ReflectionBase rb = new ReflectionBase();
        // VARIAVEIS DE CONEXÃO SQL
        private SqlConnection sConn;
        private SqlDataAdapter sAdapter;
        private SqlCommand sCommand;



        #endregion

        public void Conexao()
        {
            //CRIANDO VARIAVEL PARA LER A STRING DE CONEXAO A PARTIR DO ARQUIVO WEBCONFIG
            System.Configuration.AppSettingsReader configurationAppSettings = new System.Configuration.AppSettingsReader();

            //INSTANCIANDO A CONEXAO COM O BANCO
            this.sConn = new SqlConnection();

            //CONETANDO AO BANCO A PARTIR DA STRING DE CONEXAO
            this.sConn.ConnectionString = ((String)(configurationAppSettings.GetValue("CONNECTION_STRING", typeof(string))));

            //INSTANCIANDO A VARIÁVEL PARA ARMAZENAR OS COMANDOS
            sCommand = new SqlCommand();
            sCommand.Connection = sConn;
            sAdapter = new SqlDataAdapter();
        }

        #region Select: Validar Usuario

        public DataSet ValidarUsuario(string pLogin, string pSenha)
        {
            DataSet ds = new DataSet();

            sCommand.Parameters.Clear();
            sCommand.CommandText = "P_ValidarUsuario";
            sCommand.CommandType = CommandType.StoredProcedure;

            sCommand.Parameters.AddWithValue("@Email", pLogin);
            sCommand.Parameters.AddWithValue("@Senha", pSenha);

            sAdapter.SelectCommand = sCommand;

            try
            {
                sAdapter.Fill(ds);
            }
            catch (SqlException ex)
            {
                throw ex;
            }

            return ds;
        }

        #endregion

        #region Buscar Ideias Recentes ou Mais Vistas
        public DataSet BuscaIdeias(Int16 pOpcao, Int16 pQuantidade)
        {
            DataSet ds = new DataSet();

            sCommand.Parameters.Clear();
            sCommand.CommandText = "P_Ideias";
            sCommand.CommandType = CommandType.StoredProcedure;

            sCommand.Parameters.AddWithValue("@Opcao", pOpcao);
            sCommand.Parameters.AddWithValue("@Quantidade", pQuantidade);

            sAdapter.SelectCommand = sCommand;

            try
            {
                sAdapter.Fill(ds);
            }
            catch (SqlException ex)
            {
                throw ex;
            }

            return ds;
        }
        #endregion

        #region Pesquisar o assunto digitado pelo usuario
        public DataSet PesquisarAssunto(string pBusca, string pCategoria)
        {
            DataSet ds = new DataSet();

            sCommand.Parameters.Clear();
            sCommand.CommandText = "P_Pesquisar";
            sCommand.CommandType = CommandType.StoredProcedure;

            sCommand.Parameters.AddWithValue("@Busca", pBusca);
            sCommand.Parameters.AddWithValue("@Categoria", pCategoria);

            sAdapter.SelectCommand = sCommand;

            try
            {
                sAdapter.Fill(ds);
            }
            catch (SqlException ex)
            {
                throw ex;
            }

            return ds;
        }
        #endregion




    }
}
